#%%
from brightway2 import *
# from bw_recipe_2016 import add_recipe_2016

import bw2analyzer as bwa
import pandas as pd
from sys import argv
import os

#%%

output_path = '999_Output/ProspectiveLCA/ForExploitation'

args = argv[1:]
#args = ['PBM_March_2022', 'pbm_2050_SSP1', 'SSP1', '2050']
#projects.set_current('PBM_Livest') # PBM_Final_v2; PBM_2015; PBM_Ely;  PBM_Livest (all previous ones in Env: James_1) ; PBM_Crops (
#db=Database('pbm_Livest_2050_SSP3') # Final_PBM_StatQuo; pbm_mod_background_final_2050_SSP1; pbm_Ely_2050_SSP1 ;pbm_Crops_2050_SSP1; pbm_Livest_2050_SSP1


projects.set_current(args[0])
db=Database(args[1])
#add_recipe_2016() # call after selecting project
#%%
#func_unit={db.search('Spaghetti')[0]:1}
#bwa.traverse_tagged_databases()
#results, graph = bwa.traverse_tagged_databases(func_unit,m,label='location')

#%%
#scenario = "Livest_SSP3"
#year = '2050'

scenario=args[2]
year=args[3]


print(str(scenario) + " " + str(year))

ProcessesOfInterest_List=[db.search('Spaghetti Bolognese {Germany} - lentils')[0], 
db.search('Spaghetti Bolognese {Germany} - beef')[0],
db.search('Nutrimenu meal - day 9')[0],
db.search('Nutrimenu meal - day 12')[0],
db.search('Sup Ayam Daun Kelor/ chicken soup - day 9 {ID}')[0],
db.search('Sup Daun Kelor/ tofu soup - day 12 {ID}')[0],
db.search('Omelet Ayam Pakcoy/ omelet - day 12 {ID}')[0],
db.search('Tumis Buncis Kecap/ fried beans - day 9 {ID}')[0]]

names=["DE_Lentil","DE_Beef","Day9","Day12","Day9_ChickenSoup","Day12_TofuSoup","Day12_Omelet","Day9_Beans"]
LCIA_methods=[('ReCiPe 2016',  '1.1 (20180117)',  'Midpoint',  'Global Warming', 
 '100 year timescale',  'Hierarchist'),
 ('BII', 'land')]

#m = ('ReCiPe 2016',  '1.1 (20180117)',  'Midpoint',  'Global Warming',  '100 year timescale',  'Hierarchist')

# Effort to get additional labels (e.g. CPC) => doesn't work because of diff data sources
#def Convert(lst):
 #   res_dct = {lst[x][0]: lst[x][1] for x in range(0, len(lst), 2)}
  #  return res_dct

#%%
for m in LCIA_methods:
    for proc in ProcessesOfInterest_List:
        #print(proc)
        if m == ('BII', 'land'):
            type = 'BII'
        else:
            type = 'GHG'
        print(type)

        Index=ProcessesOfInterest_List.index(proc)

        NameForSaving=names[Index]

        print('Saving ' + str(proc) + ' as ' + str(NameForSaving))
        
        ProcessOfInterest=proc

        # Looking at details
        # db.get(ProcessOfInterest[1]).as_dict()

        functional_unit={ProcessOfInterest:1}
        #m = ('ReCiPe Midpoint (H) V1.13', 'climate change', 'GWP100')

        lca1=LCA(functional_unit,m)
        lca1.lci()
        lca1.lcia()
        lca1.score

        print(lca1.score)

        # Contribution analysis
        ca=bwa.ContributionAnalysis()

        TopProcesses=ca.annotated_top_processes(lca1,limit=0.001, limit_type= 'percent')

        result_cba=[]

        for i in TopProcesses:
            #print(i)
            #add_label=Convert(i[2]['classifications'])
            result_cba.append({'name':i[2]['name'],'ref_product':i[2]['reference product'], 'location':i[2]['location'],'score':i[0],'unit': methods.get(m).get('unit'), 'amount':i[1], 'unit_amount':i[2]['unit'] })
            #print(result)
    
        CBA_results=pd.DataFrame.from_dict(result_cba)

        #CBA_path=os.path.join('C:/Users/marquardt/4_4_PaperMealsForGit/999_Output/ProspectiveLCA/ForExploitation/',str(scenario + '_' + year + '_' + NameForSaving + '.csv'))
        CBA_path='{}/{}/{}_{}_{}_{}.csv'.format(os.path.dirname(os.getcwd()), output_path,type,scenario,year,NameForSaving)
        print(CBA_path)
        CBA_results.to_csv(CBA_path, index=False)


        # Meal components
        func_unit = ProcessOfInterest
        lca=lca1

        Meal_comp=[]

        for exc in func_unit.technosphere():
            lca.redo_lcia({exc.input: exc['amount']})
            #print(exc.input, exc['amount'], lca.score)
            Meal_comp.append({'name':exc.input, 'amount':exc['amount'], 'score':lca.score})

            Meal_comp_DF=pd.DataFrame.from_dict(Meal_comp)

        #Meal_comp_path=os.path.join('E:/RELIEF/4_4_PaperMeals/spbm/spbm_James/Results/', str(scenario + '_' + year + '_' + NameForSaving + '_meal_comp.csv'))
        Meal_comp_path='{}/{}/{}_{}_{}_{}_meal_comp.csv'.format(os.path.dirname(os.getcwd()), output_path,type,scenario,year,NameForSaving)
        print(Meal_comp_path)
        Meal_comp_DF.to_csv(Meal_comp_path, index=False)



#%%